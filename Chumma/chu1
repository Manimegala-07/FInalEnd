import { useState, useEffect } from 'react';
import axios from 'axios';

function App() {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [notes, setNotes] = useState([]);

  // Fetch all notes on page load
  useEffect(() => {
    fetchNotes();
  }, []);

  const fetchNotes = async () => {
    const res = await axios.get("http://localhost:5000/api/notes");
    setNotes(res.data);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    await axios.post("http://localhost:5000/api/notes", { title, description });
    setTitle('');
    setDescription('');
    fetchNotes(); // refresh list after adding
  };

  return (
    <div style={{ padding: "2rem" }}>
      <h1>📝 Todo List</h1>
      
      <form onSubmit={handleSubmit} style={{ marginBottom: "1rem" }}>
        <input
          type='text'
          value={title}
          placeholder='Enter title'
          onChange={(e) => setTitle(e.target.value)}
          required
        />
        <input
          type='text'
          value={description}
          placeholder='Enter description'
          onChange={(e) => setDescription(e.target.value)}
          required
        />
        <button type='submit'>Submit</button>
      </form>

      <h2>📋 Notes:</h2>
      {notes.length === 0 ? (
        <p>No notes yet!</p>
      ) : (
        <ul>
          {notes.map((note) => (
            <li key={note._id}>
              <strong>{note.title}</strong>: {note.description}
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}

export default App;




---------------------------------------------------

const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');
const Note = require('./models/note');
const mongourl = "mongodb://localhost:27017/notedb";

const app = express();
app.use(express.json());
app.use(cors());

mongoose.connect(mongourl)
  .then(() => console.log("MongoDB connected"))
  .catch(err => console.error(err));

// 📝 Get all notes
app.get('/api/notes', async (req, res) => {
  const notes = await Note.find();
  res.json(notes);
});

// ➕ Add a new note
app.post('/api/notes', async (req, res) => {
  const { title, description } = req.body;
  const newNote = new Note({ title, description });
  const saved = await newNote.save();
  res.json(saved);
});

// ❌ Delete a note
app.delete('/api/notes/:id', async (req, res) => {
  const { id } = req.params;
  await Note.findByIdAndDelete(id);
  res.json("Deleted");
});

app.listen(5000, () => console.log("Server listening on port 5000"));